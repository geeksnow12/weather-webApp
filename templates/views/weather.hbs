<!DOCTYPE html>
<html lang="en">

<head>
    {{>headerlinks}}
</head>

<body>
    {{>navbar}}

    <div class="container-fluid main_header">
        <div class="row">
            <div class="col-md-10 col-12 mx-auto">
                <div class="main_content">
                    <form class="temp_form">
                        <input type="text" id="cityName" placeholder="Enter your city name" autocomplete="off">
                        <input type="submit" value="search" id="submitBtn">
                    </form>
                </div>

                <div class="tempInformation">
                    <div class="top_layer">
                        <p id="day">Tuesday</p>
                        <p id="today_data">12 FEB</p>
                    </div>

                    <div class="main_layer">
                        <p id="city_name">Get Result Here</p>
                        <div class="middle_layer data_hide">
                            <p id="temp"><span id="temp_real_val">0</span> <sup>o</sup>C</p>
                            <p id="temp_status"><i class="fa fa-cloud" aria-hidden="true"></i></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <footer style="margin-top: 180px;">
        <p>Created with üòç(‚ùÅ¬¥‚ó°`‚ùÅ)üòç by Sneha</p>
    </footer>


    <script>

        //  By Snow...
        const day = document.getElementById('day');

        const getCurrentDay = () => {
            let weekday = new Array(7);
            weekday[0] = "Sun";
            weekday[1] = "Mon";
            weekday[2] = "Tues";
            weekday[3] = "Wed";
            weekday[4] = "Thur";
            weekday[5] = "Fri";
            weekday[6] = "Sat";

            let currentTime = new Date();
            days = weekday[currentTime.getDay()];

            let day = document.getElementById('day');

            day.innerText = days;
        };
        getCurrentDay();

        const getCurrentTime = () => {
            let months = [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "June",
                "July",
                "Aug",
                "Sept",
                "Oct",
                "Nov",
                "Dec",
            ];
            let now = new Date();
            let month = months[now.getMonth()];
            let date = now.getDate();

            let hours = now.getHours();
            let mins = now.getMinutes();

            let period = "AM";

            if (hours > 11) {
                period = "PM";
                if (hours > 12) hours -= 12;
            }

            if (mins < 10) {
                mins = "0" + mins;
            }
            let dates = ` ${month} ${date} | ${hours}:${mins}${period}`;
            let today_data = document.getElementById('today_data');
            today_data.innerText = dates;

            //let year = now.getFullYear();
        };
        getCurrentTime();

        const cityName = document.getElementById('cityName');
        const submitBtn = document.getElementById('submitBtn');
        const city_name = document.getElementById('city_name');
        const temp_real_val = document.getElementById('temp_real_val');
        const temp_status = document.getElementById('temp_status');

        const datahide = document.querySelector('.middle_layer');


        {{!-- Auto capture location... --}}
        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition,showError);
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        }
        async function showPosition(position) {
            let latitude = position.coords.latitude;
            let longitude = position.coords.longitude;

            // Use OpenCage Geocoding API to get city name
            let apiKey = `27b1450a231243098ac59f84a14efc01&language=en`; // API key
            let apiURL = `https://api.opencagedata.com/geocode/v1/json?q=${latitude}+${longitude}&key=${apiKey}`;
            let fetchCity = await fetch(apiURL);
            let jsonCity = await fetchCity.json();
            let city = jsonCity.results[0].components.city || jsonCity.results[0].components.town

            const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=ceeccb22be593ed4c098309a0efea362`);
            const data = await response.json();
            const arrData = [data];
            city_name.style.color = "gray"
            city_name.innerText = `${arrData[0].name},${arrData[0].sys.country}`;
            temp_real_val.innerText = arrData[0].main.temp;
            temp_status.innertText = arrData[0].weather[0].main;

            const tempMood = arrData[0].weather[0].main;

            if (tempMood == "Clear") {
                temp_status.innerHTML =
                    "<i class='fas fa-sun' style='color:#eccc68;'></i>";
            } else if (tempMood == "Clouds") {
                temp_status.innerHTML =
                    "<i class='fas fa-cloud' style='color:#f1f2f6;'></i>";
            } else if (tempMood == "Rain") {
                temp_status.innerHTML =
                    "<i class='fas fa-cloud-rain' style='color:#a4b0be;'></i>"
            } else {
                temp_status.innerHTML =
                    "<i class='fas fa-sun' style='color:#eccc68;'></i>";
            }
            datahide.classList.remove('data_hide');

            city_name.innerText = city
            {{!-- console.log(`City: ${city} \nLatitude: ${latitude} \nLongitude: ${longitude}`) --}}

        }
        function showError(error) {
            city_name.style.color = "red"
            switch (error.code) {
                case error.PERMISSION_DENIED:
                    city_name.innerText = "User denied the request for Geolocation."
                    break;
                case error.POSITION_UNAVAILABLE:
                    city_name.innerText = "Location information is unavailable."
                    break;
                case error.TIMEOUT:
                    city_name.innerText = "The request to get user location timed out."
                    break;
                case error.UNKNOWN_ERROR:
                    city_name.innerText = "An unknown error occurred."
                    break;
            }
            city_name.style.color = "gray"
        }
        getLocation()


        const getInfo = async (event) => {
            event.preventDefault();
            let cityVal = cityName.value;
            if (cityVal == "") {
                city_name.innerText = 'Plz write the name before search';
                city_name.style.color = "red"
                datahide.classList.add('data_hide');

            } else {
                try {
                    let url = `https://api.openweathermap.org/data/2.5/weather?q=${cityVal}&units=metric&appid=ceeccb22be593ed4c098309a0efea362`;
                    const response = await fetch(url);
                    const data = await response.json();
                    const arrData = [data];

                    city_name.style.color = "gray"
                    city_name.innerText = `${arrData[0].name},${arrData[0].sys.country}`;
                    temp_real_val.innerText = arrData[0].main.temp;
                    temp_status.innertText = arrData[0].weather[0].main;

                    const tempMood = arrData[0].weather[0].main;

                    if (tempMood == "Clear") {
                        temp_status.innerHTML =
                            "<i class='fas fa-sun' style='color:#eccc68;'></i>";
                    } else if (tempMood == "Clouds") {
                        temp_status.innerHTML =
                            "<i class='fas fa-cloud' style='color:#f1f2f6;'></i>";
                    } else if (tempMood == "Rain") {
                        temp_status.innerHTML =
                            "<i class='fas fa-cloud-rain' style='color:#a4b0be;'></i>"
                    } else {
                        temp_status.innerHTML =
                            "<i class='fas fa-sun' style='color:#eccc68;'></i>";
                    }
                    datahide.classList.remove('data_hide');
                }
                catch {
                    city_name.innerText = 'Plz enter the city name properly';
                    city_name.style.color = "red"
                    datahide.classList.add('data_hide');
                }
            }
        }

        submitBtn.addEventListener('click', getInfo);
    </script>
</body>

</html>